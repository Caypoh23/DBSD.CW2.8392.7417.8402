@model DBSD.CW2._8392._7417._8402.Models.PatientFilterViewModel
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Filter";
}

<h1>Patient list</h1>
<p>
    <a class="btn btn-primary" asp-action="Create">Register patient</a>
</p>
<h4>Filter patients</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Filter">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="RegisteredDate" class="control-label"></label>
                <input asp-for="RegisteredDate" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="DiagnoseName" class="control-label"></label>
                <input asp-for="DiagnoseName" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="DoctorName" class="control-label"></label>
                <input asp-for="DoctorName" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="SortColumn" class="control-label"></label>
                @Html.DropDownList("SortColumn",
Html.GetEnumSelectList<SortColumn>(), new { @class = "form-control" })
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="SortDesc" /> @Html.DisplayNameFor(model => model.SortDesc)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Filter" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<hr />
@Html.ActionLink(
    "Export to JSON",
    "ExportJson",
    new
    {
        name = Model.Name,
        address = Model.Address,
        registeredDate = Model.RegisteredDate,
        diagnoseName = Model.DiagnoseName,
        doctorName = Model.DoctorName
    })

@Html.ActionLink(
    "Export to XML",
    "ExportXml",
    new
    {
        name = Model.Name,
        address = Model.Address,
        registeredDate = Model.RegisteredDate,
        diagnoseName = Model.DiagnoseName,
        doctorName = Model.DoctorName
    })

@Html.ActionLink(
    "Export to CSV",
    "ExportCsv",
    new
    {
        name = Model.Name,
        address = Model.Address,
        registeredDate = Model.RegisteredDate,
        diagnoseName = Model.DiagnoseName,
        doctorName = Model.DoctorName
    })
<hr />

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().DoB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().RegisteredDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().DiagnoseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().DoctorName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().DepartmentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().WardNo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Patients.First().NurseName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Patients)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DoB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RegisteredDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DiagnoseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DoctorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DepartmentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WardNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NurseName)
                </td>
                <td class="d-flex flex-column">
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager(
    Model.Patients,
    pageNum => Url.Action(
                        "Filter",
                        new
                        {
                            pageNum,
                            name = Model.Name,
                            address = Model.Address,
                            registeredDate = Model.RegisteredDate,
                            diagnoseName = Model.DiagnoseName,
                            doctorName = Model.DoctorName,
                            sortColumn = Model.SortColumn,
                            sortDesc = Model.SortDesc
                        }
                      )
    )


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
